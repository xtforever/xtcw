@class Wcap(Core)

@CLASSVARS
@var XtEnum compress_exposure = TRUE

@PUBLIC
@var <Callback> XtCallbackList callback  = NULL
@var int grab = 0

@PRIVATE
@var Bool cap
@var GC gc_copy
@var int pic_w
@var int pic_h
@var shimg_t *im
@var XtIntervalId autoupd_id

@METHODS

@proc initialize
{
  $pic_w = 320;
  $pic_h = 240;
  $width = $pic_w;
  $height = $pic_h;
  $gc_copy = XtGetGC($,0,NULL);
  $cap=0;
  $im = shm_create($, $pic_w, $pic_h );
  xv4l2_init_grab();
}

@proc destroy
{
  XtReleaseGC($,$gc_copy);
  shm_destroy($im);
  xv4l2_destroy();
}

@proc set_values
{
        capture_update($);
        return 0;
}

@proc expose
{
        capture_update($);
        paint($);
}

@proc realize
{
  XtCreateWindow($, (unsigned int) InputOutput,
  	  (Visual *) CopyFromParent, *mask, attributes);
}

@proc query_geometry
{
    reply->request_mode = CWX | CWY | CWWidth | CWHeight;
    reply->x=0; reply->y=0;
    reply->width =  $pic_w;
    reply->height = $pic_h;
    return XtGeometryAlmost;
}

@UTILITIES

@proc paint($)
{
        if(! $im ) return;

        Display *d = XtDisplay($);
        Window   w = XtWindow($);
        if(!XShmPutImage(d,w,$gc_copy,$im->img,
                0,0, /* source x,y */
                0,0, /* dest x,y */
                $pic_w,$pic_h,
                False))
          ERR("ShmPutImage error");
}

@proc grab($)
{
        XImage *img = $im->img;
        xv4l2_grab( (void*)img->data,
                    img->width, img->height,
                    img->bytes_per_line );
}

@proc autoupd_cb(XtPointer self, XtIntervalId *id)
{
        if(! $grab ) return;
        grab($); paint($);
        XtAppContext ctx = XtWidgetToApplicationContext($);
        $autoupd_id =
	        XtAppAddTimeOut( ctx,
                                 1000/25,
                                 autoupd_cb, $ );
}

@proc capture_update($)
{
        if( $grab && !$cap ) {
            start_capture($); $cap=1;
            autoupd_cb($,NULL);
            return;
        }

        if( $cap && !$grab ) {
            stop_capture($); $cap=0;
        }
}

@proc start_capture($)
{
        xv4l2_start_capture();
}

@proc stop_capture($)
{
        xv4l2_stop_capture();
}

@IMPORTS
@incl <X11/extensions/XShm.h>
@incl <sys/ipc.h>
@incl <sys/shm.h>
@incl <mls.h>
@incl "xv4l2.h"
@incl "xshm-util.h"